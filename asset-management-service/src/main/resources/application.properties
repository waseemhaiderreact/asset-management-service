
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
#spring.datasource.url=jdbc:mysql://localhost:3306/db_asset
spring.datasource.url=${spring.datasource.url}
spring.datasource.username=root
spring.datasource.password=${spring.datasource.password}
#spring.datasource.password=
server.port=9195
http.port=8195
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false


spring.cloud.stream.bindings.inBoundGetAssetBasicDetail.destination=GetAssetBasicDetailTopic
spring.cloud.stream.bindings.inBoundGetAssetBasicDetail.contentType=application/json

spring.cloud.stream.bindings.outBoundGetAssetBasicDetail.destination=GetAssetBasicDetailResponseTopic
spring.cloud.stream.bindings.outBoundGetAssetBasicDetail.contentType=application/json

spring.cloud.stream.bindings.inBoundUsageCreate.destination=UsageCreateForAssetManagementServiceTopic
spring.cloud.stream.bindings.inBoundUsageCreate.contentType=application/json

spring.cloud.stream.bindings.inBoundAssetSend.destination=AssetSendForAssetManagementServiceTopic
spring.cloud.stream.bindings.inBoundAssetSend.contentType=application/json

spring.cloud.stream.bindings.outBoundAssetSend.destination=AssetSendForAssetManagementServiceTopic
spring.cloud.stream.bindings.outBoundAssetSend.contentType=application/json

/* Written By Kumail Khan*/
spring.cloud.stream.bindings.outBoundWalletNotification.destination=ReceiveWalletNotification
spring.cloud.stream.bindings.outBoundWalletNotification.contentType=application/json

spring.cloud.stream.bindings.outBoundWalletRequest.destination=ReceiveWalletRequest
spring.cloud.stream.bindings.outBoundWalletRequest.contentType=application/json

spring.cloud.stream.bindings.inBoundReceivingWalletRequestModel.destination=ReplyingWalletRequestUsers
spring.cloud.stream.bindings.inBoundReceivingWalletRequestModel.contentType=application/json

cloud.aws.credentials.accessKey=${cloud.aws.credentials.accessKey}
cloud.aws.credentials.secretKey=${cloud.aws.credentials.secretKey}
cloud.aws.endpoint=${cloud.aws.endpoint}
cloud.aws.bucketName= ${cloud.aws.bucketName}
cloud.aws.credentials.instanceProfile=${cloud.aws.credentials.instanceProfile}
cloud.aws.stack.auto=${cloud.aws.stack.auto}

cloud.aws.region=${cloud.aws.region}

spring.cloud.kafka.binder.zkNodes=localhost 
spring.cloud.kafka.binder.brokers=localhost

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads
aps.service.fetch.url = http://127.0.0.1:8196
aps-service.ribbon.listOfServers = http://127.0.0.1:8196

# security.require-ssl=true
#
# server.ssl.enabled=true
# server.ssl.key-store=file:/data/servers/ssl/sslcert.jks
# server.ssl.key-store-type=JKS
# server.ssl.key-store-password=123456
# server.ssl.key-alias=tomcat


# Feign Configs
auth-service.url = ${auth.url}
auth-service.ribbon.listOfServers = ${auth.url}

# SCIM Endpoints
introspectionEndpoint=${introspection.endpoint}
scimMeEndpoint=${scim.me.endpoint}

#redis cache configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=

spring.redis.jedis.pool.max-active=7
spring.redis.jedis.pool.max-idle=7
spring.redis.jedis.pool.min-idle=2
spring.redis.jedis.pool.max-wait=-1ms

spring.cache.redis.use-key-prefix=true
spring.cache.type=redis
spring.cache.cache-names=assetAndAssetGroup,categories