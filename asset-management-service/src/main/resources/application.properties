
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
#spring.datasource.url=jdbc:mysql://localhost:3306/db_asset
spring.datasource.url=${spring.datasource.url}
spring.datasource.username=root
spring.datasource.password=${spring.datasource.password}
#spring.datasource.password=
server.port=8195
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

spring.cloud.stream.bindings.inBoundUsageCreate.destination=UsageCreateForAssetManagementServiceTopic
spring.cloud.stream.bindings.inBoundUsageCreate.contentType=application/json

spring.cloud.stream.bindings.inBoundAssetSend.destination=AssetSendForAssetManagementServiceTopic
spring.cloud.stream.bindings.inBoundAssetSend.contentType=application/json

spring.cloud.stream.bindings.outBoundAssetSend.destination=AssetSendForAssetManagementServiceTopic
spring.cloud.stream.bindings.outBoundAssetSend.contentType=application/json

cloud.aws.credentials.accessKey=${cloud.aws.credentials.accessKey}
cloud.aws.credentials.secretKey=${cloud.aws.credentials.secretKey}
cloud.aws.endpoint=${cloud.aws.endpoint}
cloud.aws.bucketName= ${cloud.aws.bucketName}
cloud.aws.credentials.instanceProfile=${cloud.aws.credentials.instanceProfile}
cloud.aws.stack.auto=${cloud.aws.stack.auto}

cloud.aws.region=${cloud.aws.region}

spring.cloud.kafka.binder.zkNodes=localhost
spring.cloud.kafka.binder.brokers=localhost

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads